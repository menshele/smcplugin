<idea-plugin version="2">
    <id>com.your.company.unique.plugin.id</id>
    <name>Plugin display name here</name>
    <version>1.0</version>
    <vendor email="support@yourcompany.com" url="http://www.yourcompany.com">YourCompany</vendor>

    <description><![CDATA[
      Enter short description for your plugin here.<br>
      <em>most HTML tags may be used</em>
    ]]></description>

    <change-notes><![CDATA[
      Add change notes here.<br>
      <em>most HTML tags may be used</em>
    ]]>
    </change-notes>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html for description -->
    <idea-version since-build="141.0"/>

    <!-- please see http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/plugin_compatibility.html
         on how to target different products -->
    <!-- uncomment to enable plugin in all products
    <depends>com.intellij.modules.lang</depends>
    -->

    <extensions defaultExtensionNs="com.intellij">
        <!-- Add your extensions here -->
        <fileTypeFactory implementation="com.smcplugin.SmcFileTypeFactory"/>
        <lang.parserDefinition language="smc" implementationClass="com.smcplugin.SmcParserDefinition"/>
        <lang.syntaxHighlighterFactory key="smc" implementationClass="com.smcplugin.highlight.SmcSyntaxHighlighterFactory"/>
        <colorSettingsPage implementation="com.smcplugin.SmcColorSettingsPage"/>
        <lang.commenter language="smc" implementationClass="com.smcplugin.SmcCommenter"/>
        <lang.formatter language="smc" implementationClass="com.smcplugin.formatter.SmcFormattingModelBuilder"/>
        <codeStyleSettingsProvider implementation="com.smcplugin.formatter.SmcCodeStyleSettingsProvider"/>
        <langCodeStyleSettingsProvider implementation="com.smcplugin.formatter.SmcLanguageCodeStyleSettingsProvider"/>
        <lang.foldingBuilder language="smc" implementationClass="com.smcplugin.SmcFoldingBuilder"/>
        <lang.braceMatcher language="smc" implementationClass="com.smcplugin.highlight.SmcPairedBraceMatcher"/>

        <annotator language="smc" implementationClass="com.smcplugin.validation.SmcSingleElementsAnnotator"/>
        <annotator language="smc" implementationClass="com.smcplugin.validation.SmcSingleNamedElementAnnotator"/>
        <annotator language="smc" implementationClass="com.smcplugin.validation.SmcCustomNamedElementExistsAnnotator"/>
        <annotator language="smc" implementationClass="com.smcplugin.validation.SmcStartStateAnnotator"/>
        <annotator language="smc" implementationClass="com.smcplugin.validation.SmcPushStateAnnotator"/>
        <annotator language="smc" implementationClass="com.smcplugin.validation.SmcClassExistsAnnotator"/>
        <annotator language="smc" implementationClass="com.smcplugin.validation.SmcMethodExistsAnnotator"/>
        <psi.referenceContributor language="smc" implementation="com.smcplugin.reference.SmcReferenceContributor"/>
        <psi.referenceContributor language="JAVA" implementation="com.smcplugin.reference.SmcReferenceContributor"/>
        <codeInsight.lineMarkerProvider language="smc" implementationClass="com.smcplugin.linemarker.SmcLineMarkerProvider"/>
        <lang.findUsagesProvider language="smc" implementationClass="com.smcplugin.reference.SmcUsagesProvider"/>
        <!--
            <completion.contributor language="smc" implementationClass="com.smcplugin.SmcCompletionContributor"/>
            <lang.refactoringSupport language="smc" implementationClass="com.smcplugin.SmcRefactoringSupportProvider"/>

            <gotoSymbolContributor implementation="com.smcplugin.SmcChooseByNameContributor"/>
            <lang.psiStructureViewFactory language="smc" implementationClass="com.smcplugin.SmcStructureViewFactory"/>
-->
    </extensions>

    <actions>
        <!-- Add your actions here -->
    </actions>
</idea-plugin>